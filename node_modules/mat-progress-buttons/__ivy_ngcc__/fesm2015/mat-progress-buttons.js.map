{"version":3,"file":"mat-progress-buttons.js","sources":["../esm2015/projects/mat-progress-buttons/src/lib/component/spinner-button/spinner-button.component.ts","../esm2015/projects/mat-progress-buttons/src/lib/component/bar-button/bar-button.component.ts","../../projects/mat-progress-buttons/src/lib/mat-progress-buttons.module.ts","../../../projects/mat-progress-buttons/src/mat-progress-buttons.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, HostListener, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { MatProgressButtonOptions } from '../../mat-progress-buttons.interface';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'mat-spinner-button',\n  templateUrl: './spinner-button.component.html',\n  styleUrls: ['./spinner-button.component.scss']\n})\nexport class MatSpinnerButtonComponent implements OnChanges {\n  @Input() options: MatProgressButtonOptions;\n  @Input() active: boolean;\n  @Input() disabled: boolean;\n\n  @Output() btnClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n  @HostListener('click', ['$event'])\n  public onClick(event: MouseEvent) {\n    if (!this.options.disabled && !this.options.active) {\n      this.btnClick.emit(event);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.active) {\n      this.options.active = changes.active.currentValue;\n    }\n    if (changes.disabled) {\n      this.options.disabled = changes.disabled.currentValue;\n    }\n  }\n}\n","import { Component, Input, Output, EventEmitter, HostListener, OnChanges, SimpleChanges } from '@angular/core';\nimport { MatProgressButtonOptions } from '../../mat-progress-buttons.interface';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'mat-bar-button',\n  templateUrl: './bar-button.component.html',\n  styleUrls: ['./bar-button.component.scss']\n})\nexport class MatBarButtonComponent implements OnChanges {\n  @Input() options: MatProgressButtonOptions;\n  @Input() active: boolean;\n  @Input() disabled: boolean;\n  @Output() btnClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n  @HostListener('click', ['$event'])\n  public onClick(event: MouseEvent) {\n    if (!this.options.disabled && !this.options.active) {\n      this.btnClick.emit(event);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.active) {\n      this.options.active = changes.active.currentValue;\n    }\n    if (changes.disabled) {\n      this.options.disabled = changes.disabled.currentValue;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { MatSpinnerButtonComponent } from './component/spinner-button/spinner-button.component';\nimport { MatBarButtonComponent } from './component/bar-button/bar-button.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\n// Export module's public API\nexport { MatSpinnerButtonComponent } from './component/spinner-button/spinner-button.component';\nexport { MatBarButtonComponent } from './component/bar-button/bar-button.component';\nexport { MatProgressButtonOptions } from './mat-progress-buttons.interface';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatIconModule\n  ],\n  exports: [\n    MatSpinnerButtonComponent,\n    MatBarButtonComponent\n  ],\n  declarations: [\n    MatSpinnerButtonComponent,\n    MatBarButtonComponent\n  ]\n})\nexport class MatProgressButtonsModule {\n  static forRoot(): ModuleWithProviders<MatProgressButtonsModule> {\n    return {\n      ngModule: MatProgressButtonsModule\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}